var CjFitApi = {form_submitted: false};

(function($)
{
	CjFitApi.init = function()
	{
		$('body').on('mouseover', '[data-toggle="tooltip"]', function(){$(this).tooltip('show');});
	}
	
	CjFitApi.initDashboard = function()
	{
		$('.dashboard-guage').each(function(){
			var guage = $(this);
			var g = new JustGage({
				id: guage.attr('id'),
				value: guage.data('value'),
				min: 0,
				max: guage.data('goal'),
				decimals: guage.data('decimals') > 0,
				label: guage.data('label')
			});
			
			window.chartColors = {
					red: 'rgb(255, 99, 132)',
					orange: 'rgb(255, 159, 64)',
					yellow: 'rgb(255, 205, 86)',
					green: 'rgb(75, 192, 192)',
					blue: 'rgb(54, 162, 235)',
					purple: 'rgb(153, 102, 255)',
					grey: 'rgb(201, 203, 207)'
				};
			var color = Chart.helpers.color;
			var ctx = document.getElementById("dashboard-activity-chart-canvas").getContext("2d");
			new Chart(ctx, {
                type: 'bar',
                data: {
                	labels: $('.dashboard-steps-labels').text().split(','),
                	datasets: [{
	                	backgroundColor: color(window.chartColors.red).alpha(0.5).rgbString(),
	                    borderColor: window.chartColors.red,
	                    borderWidth: 1,
	                    data: $('.dashboard-steps-values').text().split(',')
                    }]
                },
    	        options: {
    	            responsive: true,
    	            maintainAspectRatio: false,
    	            legend: {
    	                position: false,
    	            },
    	            title: {
    	                display: false,
    	            },
    	            animation: {
    	                animateScale: true,
    	                animateRotate: true
    	            },
    	            scales: {
    	                xAxes: [{
    	                            gridLines: {
    	                                display:true
    	                            },
    	                            ticks: {
    	                                beginAtZero: true
    	                            },
    	                            type: 'time',
    	                            time: {
    	                            	displayFormats: {
			                              	'millisecond': 'MMM DD',
			                                'second': 'MMM DD',
			                                'minute': 'MMM DD',
			                                'hour': 'MMM DD',
			                                'day': 'MMM DD',
			                                'week': 'MMM DD',
			                                'month': 'MMM DD',
			                                'quarter': 'MMM DD',
			                                'year': 'MMM DD',
    	                            	},
    	                            	tooltipFormat: '[week] w - YYYY'
    	                            }
    	                        }],
    	                yAxes: [{
    	                            gridLines: {
    	                                display:true
    	                            },
    	                            ticks: {
    	                                beginAtZero: true
    	                            }
    	                        }]
                    },
                    elements: {
                        rectangle: {
                            borderWidth: 2,
                        },
                        line: {
                        	tension: 0.4
                        }
                    }
    	        }
            });
		});
	}
	
	CjFitApi.initActivity = function()
	{
		var lbl_steps = $('#lbl_steps').html();
		
		$('.summary-page-navigation .cjfit-summary-prev').click(function(){
			var index = $(this).closest('.steps-page').index() - 1;
			var guage = $(this).closest('.steps-page').find('.steps-guage');
			$(this).closest('.steps-page').hide();
			var nextPage;
			
			if($(this).closest('.steps-page').prev('.steps-page').length > 0)
			{
				nextPage = $(this).closest('.steps-page').prev();
			}
			else
			{
				nextPage = $(this).closest('.steps-page').first();
				index = 0;
			}
			
			nextPage.show();
			
			if(nextPage.hasClass('new'))
			{
				var g = new JustGage({
					id: 'steps-guage-' + index,
					value: guage.data('value'),
					min: 0,
					max: guage.data('goal'),
					label: lbl_steps
				});
				
				nextPage.removeClass('new');
			}
		});
		
		$('.summary-page-navigation .cjfit-summary-next').click(function(){
			var index = $(this).closest('.steps-page').index() + 1;
			var guage = $(this).closest('.steps-page').find('.steps-guage');
			$(this).closest('.steps-page').hide();
			var nextPage;
			
			if($(this).closest('.steps-page').next('.steps-page').length > 0)
			{
				nextPage = $(this).closest('.steps-page').next();
			}
			else
			{
				nextPage = $(this).closest('.steps-page').first();
				index = 0;
			}
			
			nextPage.show();
			
			if(nextPage.hasClass('new'))
			{
				var g = new JustGage({
					id: 'steps-guage-' + index,
					value: guage.data('value'),
					min: 0,
					max: guage.data('goal'),
					label: lbl_steps
				});
				
				nextPage.removeClass('new');
			}
		});
		
		$('.summary-page-navigation .cjfit-summary-prev:first').click();
	}
	
	CjFitApi.initChallengesForm = function()
	{
		var rulesText = $('#jform_rules').val();
		var rulesJson = $.parseJSON(rulesText);
		$('#rules-builder').queryBuilder({
			  plugins: ['bt-tooltip-errors'],
			  allow_groups: 1,
			  filters: [{
				    id: 'steps',
				    label: 'Steps',
				    type: 'integer',
				    operators: ['equal', 'not_equal', 'less', 'less_or_equal', 'greater', 'greater_or_equal', 'between', 'not_between']
				  },
				  {
				    id: 'distance',
				    label: 'Distance',
				    type: 'double',
				    operators: ['equal', 'not_equal', 'less', 'less_or_equal', 'greater', 'greater_or_equal', 'between', 'not_between']
				  },
				  {
				    id: 'calories',
				    label: 'Calories',
				    type: 'integer',
				    operators: ['equal', 'not_equal', 'less', 'less_or_equal', 'greater', 'greater_or_equal', 'between', 'not_between']
				  },
				  {
				    id: 'minutes',
				    label: 'Active Minutes',
				    type: 'integer',
				    operators: ['equal', 'not_equal', 'less', 'less_or_equal', 'greater', 'greater_or_equal', 'between', 'not_between']
				  }],
			  rules: rulesJson
			});
	}
	
	CjFitApi.submitAjaxForm = function(buttonObj, formName, action, triggerBefore, triggerAfter)
	{
		var button = $(buttonObj);
		var form = button.closest(formName).length > 0 ? button.closest(formName) : $(formName);
		var url = form.attr('action');
		form.find('input[name="task"]').val(action);
		
		$.ajax({
            type		: 'POST',
            url			: url + (/\?/.test(url) ? '&' : '?') +'format=json',
            data		: form.serialize(),
            dataType	: 'json',
            encode		: true,
            beforeSend	: function( xhr ) {
            	var result = CjFitApi.executeFunctionByName(triggerBefore, CjFitApi, action, button, form, null);
            	
            	if(!result)
            	{
            		return false;
            	}
            }
        }).done(function(data) {
        	if(data.messages && data.messages.message)
			{
        		if(typeof data.messages.message != 'undefined')
        		{
        			alert(data.messages.message);
        		}
			}
        	
			if(data.success)
			{
				CjFitApi.executeFunctionByName(triggerAfter, CjFitApi, action, button, form, data);
			}
			else
			{
				alert(data.message);
			}
        }).fail(function(data){
        	if(typeof data.message != 'undefined')
        	{
        		alert(data.message);
        	}
        });
	}
	
	CjFitApi.executeFunctionByName = function(functionName, context, args) 
	{
		var args = [].slice.call(arguments).splice(2);
		var namespaces = functionName.split(".");
		var func = namespaces.pop();

		for(var i = 0; i < namespaces.length; i++) 
		{
			context = context[namespaces[i]];
		}
		return context[func].apply(this, args);
	}
})(jQuery);

jQuery(document).ready(function($)
{
	CjFitApi.init();
	if($('.cjfit_pageid_profile').length > 0) 
	{
		CjFitApi.initActivity();
	} 
	
	if($('.cjfit_pageid_dashboard').length > 0) 
	{
		CjFitApi.initDashboard();
	}
	
	if($('.cjfit_pageid_challenge_form').length > 0) 
	{
		CjFitApi.initChallengesForm();
	}
});